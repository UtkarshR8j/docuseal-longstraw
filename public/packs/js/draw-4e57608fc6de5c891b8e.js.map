{"version":3,"file":"js/draw-4e57608fc6de5c891b8e.js","mappings":"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","sources":["webpack://docuseal/./node_modules/signature_pad/dist/signature_pad.js","webpack://docuseal/./app/javascript/draw.js","webpack://docuseal/./app/javascript/submission_form/crop_canvas.js"],"sourcesContent":["/*!\n * Signature Pad v4.1.5 | https://github.com/szimek/signature_pad\n * (c) 2023 Szymon Nowak | Released under the MIT license\n */\n\nclass Point {\n    constructor(x, y, pressure, time) {\n        if (isNaN(x) || isNaN(y)) {\n            throw new Error(`Point is invalid: (${x}, ${y})`);\n        }\n        this.x = +x;\n        this.y = +y;\n        this.pressure = pressure || 0;\n        this.time = time || Date.now();\n    }\n    distanceTo(start) {\n        return Math.sqrt(Math.pow(this.x - start.x, 2) + Math.pow(this.y - start.y, 2));\n    }\n    equals(other) {\n        return (this.x === other.x &&\n            this.y === other.y &&\n            this.pressure === other.pressure &&\n            this.time === other.time);\n    }\n    velocityFrom(start) {\n        return this.time !== start.time\n            ? this.distanceTo(start) / (this.time - start.time)\n            : 0;\n    }\n}\n\nclass Bezier {\n    constructor(startPoint, control2, control1, endPoint, startWidth, endWidth) {\n        this.startPoint = startPoint;\n        this.control2 = control2;\n        this.control1 = control1;\n        this.endPoint = endPoint;\n        this.startWidth = startWidth;\n        this.endWidth = endWidth;\n    }\n    static fromPoints(points, widths) {\n        const c2 = this.calculateControlPoints(points[0], points[1], points[2]).c2;\n        const c3 = this.calculateControlPoints(points[1], points[2], points[3]).c1;\n        return new Bezier(points[1], c2, c3, points[2], widths.start, widths.end);\n    }\n    static calculateControlPoints(s1, s2, s3) {\n        const dx1 = s1.x - s2.x;\n        const dy1 = s1.y - s2.y;\n        const dx2 = s2.x - s3.x;\n        const dy2 = s2.y - s3.y;\n        const m1 = { x: (s1.x + s2.x) / 2.0, y: (s1.y + s2.y) / 2.0 };\n        const m2 = { x: (s2.x + s3.x) / 2.0, y: (s2.y + s3.y) / 2.0 };\n        const l1 = Math.sqrt(dx1 * dx1 + dy1 * dy1);\n        const l2 = Math.sqrt(dx2 * dx2 + dy2 * dy2);\n        const dxm = m1.x - m2.x;\n        const dym = m1.y - m2.y;\n        const k = l2 / (l1 + l2);\n        const cm = { x: m2.x + dxm * k, y: m2.y + dym * k };\n        const tx = s2.x - cm.x;\n        const ty = s2.y - cm.y;\n        return {\n            c1: new Point(m1.x + tx, m1.y + ty),\n            c2: new Point(m2.x + tx, m2.y + ty),\n        };\n    }\n    length() {\n        const steps = 10;\n        let length = 0;\n        let px;\n        let py;\n        for (let i = 0; i <= steps; i += 1) {\n            const t = i / steps;\n            const cx = this.point(t, this.startPoint.x, this.control1.x, this.control2.x, this.endPoint.x);\n            const cy = this.point(t, this.startPoint.y, this.control1.y, this.control2.y, this.endPoint.y);\n            if (i > 0) {\n                const xdiff = cx - px;\n                const ydiff = cy - py;\n                length += Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n            }\n            px = cx;\n            py = cy;\n        }\n        return length;\n    }\n    point(t, start, c1, c2, end) {\n        return (start * (1.0 - t) * (1.0 - t) * (1.0 - t))\n            + (3.0 * c1 * (1.0 - t) * (1.0 - t) * t)\n            + (3.0 * c2 * (1.0 - t) * t * t)\n            + (end * t * t * t);\n    }\n}\n\nclass SignatureEventTarget {\n    constructor() {\n        try {\n            this._et = new EventTarget();\n        }\n        catch (error) {\n            this._et = document;\n        }\n    }\n    addEventListener(type, listener, options) {\n        this._et.addEventListener(type, listener, options);\n    }\n    dispatchEvent(event) {\n        return this._et.dispatchEvent(event);\n    }\n    removeEventListener(type, callback, options) {\n        this._et.removeEventListener(type, callback, options);\n    }\n}\n\nfunction throttle(fn, wait = 250) {\n    let previous = 0;\n    let timeout = null;\n    let result;\n    let storedContext;\n    let storedArgs;\n    const later = () => {\n        previous = Date.now();\n        timeout = null;\n        result = fn.apply(storedContext, storedArgs);\n        if (!timeout) {\n            storedContext = null;\n            storedArgs = [];\n        }\n    };\n    return function wrapper(...args) {\n        const now = Date.now();\n        const remaining = wait - (now - previous);\n        storedContext = this;\n        storedArgs = args;\n        if (remaining <= 0 || remaining > wait) {\n            if (timeout) {\n                clearTimeout(timeout);\n                timeout = null;\n            }\n            previous = now;\n            result = fn.apply(storedContext, storedArgs);\n            if (!timeout) {\n                storedContext = null;\n                storedArgs = [];\n            }\n        }\n        else if (!timeout) {\n            timeout = window.setTimeout(later, remaining);\n        }\n        return result;\n    };\n}\n\nclass SignaturePad extends SignatureEventTarget {\n    constructor(canvas, options = {}) {\n        super();\n        this.canvas = canvas;\n        this._drawningStroke = false;\n        this._isEmpty = true;\n        this._lastPoints = [];\n        this._data = [];\n        this._lastVelocity = 0;\n        this._lastWidth = 0;\n        this._handleMouseDown = (event) => {\n            if (event.buttons === 1) {\n                this._drawningStroke = true;\n                this._strokeBegin(event);\n            }\n        };\n        this._handleMouseMove = (event) => {\n            if (this._drawningStroke) {\n                this._strokeMoveUpdate(event);\n            }\n        };\n        this._handleMouseUp = (event) => {\n            if (event.buttons === 1 && this._drawningStroke) {\n                this._drawningStroke = false;\n                this._strokeEnd(event);\n            }\n        };\n        this._handleTouchStart = (event) => {\n            if (event.cancelable) {\n                event.preventDefault();\n            }\n            if (event.targetTouches.length === 1) {\n                const touch = event.changedTouches[0];\n                this._strokeBegin(touch);\n            }\n        };\n        this._handleTouchMove = (event) => {\n            if (event.cancelable) {\n                event.preventDefault();\n            }\n            const touch = event.targetTouches[0];\n            this._strokeMoveUpdate(touch);\n        };\n        this._handleTouchEnd = (event) => {\n            const wasCanvasTouched = event.target === this.canvas;\n            if (wasCanvasTouched) {\n                if (event.cancelable) {\n                    event.preventDefault();\n                }\n                const touch = event.changedTouches[0];\n                this._strokeEnd(touch);\n            }\n        };\n        this._handlePointerStart = (event) => {\n            this._drawningStroke = true;\n            event.preventDefault();\n            this._strokeBegin(event);\n        };\n        this._handlePointerMove = (event) => {\n            if (this._drawningStroke) {\n                event.preventDefault();\n                this._strokeMoveUpdate(event);\n            }\n        };\n        this._handlePointerEnd = (event) => {\n            if (this._drawningStroke) {\n                event.preventDefault();\n                this._drawningStroke = false;\n                this._strokeEnd(event);\n            }\n        };\n        this.velocityFilterWeight = options.velocityFilterWeight || 0.7;\n        this.minWidth = options.minWidth || 0.5;\n        this.maxWidth = options.maxWidth || 2.5;\n        this.throttle = ('throttle' in options ? options.throttle : 16);\n        this.minDistance = ('minDistance' in options ? options.minDistance : 5);\n        this.dotSize = options.dotSize || 0;\n        this.penColor = options.penColor || 'black';\n        this.backgroundColor = options.backgroundColor || 'rgba(0,0,0,0)';\n        this._strokeMoveUpdate = this.throttle\n            ? throttle(SignaturePad.prototype._strokeUpdate, this.throttle)\n            : SignaturePad.prototype._strokeUpdate;\n        this._ctx = canvas.getContext('2d');\n        this.clear();\n        this.on();\n    }\n    clear() {\n        const { _ctx: ctx, canvas } = this;\n        ctx.fillStyle = this.backgroundColor;\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        this._data = [];\n        this._reset(this._getPointGroupOptions());\n        this._isEmpty = true;\n    }\n    fromDataURL(dataUrl, options = {}) {\n        return new Promise((resolve, reject) => {\n            const image = new Image();\n            const ratio = options.ratio || window.devicePixelRatio || 1;\n            const width = options.width || this.canvas.width / ratio;\n            const height = options.height || this.canvas.height / ratio;\n            const xOffset = options.xOffset || 0;\n            const yOffset = options.yOffset || 0;\n            this._reset(this._getPointGroupOptions());\n            image.onload = () => {\n                this._ctx.drawImage(image, xOffset, yOffset, width, height);\n                resolve();\n            };\n            image.onerror = (error) => {\n                reject(error);\n            };\n            image.crossOrigin = 'anonymous';\n            image.src = dataUrl;\n            this._isEmpty = false;\n        });\n    }\n    toDataURL(type = 'image/png', encoderOptions) {\n        switch (type) {\n            case 'image/svg+xml':\n                if (typeof encoderOptions !== 'object') {\n                    encoderOptions = undefined;\n                }\n                return `data:image/svg+xml;base64,${btoa(this.toSVG(encoderOptions))}`;\n            default:\n                if (typeof encoderOptions !== 'number') {\n                    encoderOptions = undefined;\n                }\n                return this.canvas.toDataURL(type, encoderOptions);\n        }\n    }\n    on() {\n        this.canvas.style.touchAction = 'none';\n        this.canvas.style.msTouchAction = 'none';\n        this.canvas.style.userSelect = 'none';\n        const isIOS = /Macintosh/.test(navigator.userAgent) && 'ontouchstart' in document;\n        if (window.PointerEvent && !isIOS) {\n            this._handlePointerEvents();\n        }\n        else {\n            this._handleMouseEvents();\n            if ('ontouchstart' in window) {\n                this._handleTouchEvents();\n            }\n        }\n    }\n    off() {\n        this.canvas.style.touchAction = 'auto';\n        this.canvas.style.msTouchAction = 'auto';\n        this.canvas.style.userSelect = 'auto';\n        this.canvas.removeEventListener('pointerdown', this._handlePointerStart);\n        this.canvas.removeEventListener('pointermove', this._handlePointerMove);\n        this.canvas.ownerDocument.removeEventListener('pointerup', this._handlePointerEnd);\n        this.canvas.removeEventListener('mousedown', this._handleMouseDown);\n        this.canvas.removeEventListener('mousemove', this._handleMouseMove);\n        this.canvas.ownerDocument.removeEventListener('mouseup', this._handleMouseUp);\n        this.canvas.removeEventListener('touchstart', this._handleTouchStart);\n        this.canvas.removeEventListener('touchmove', this._handleTouchMove);\n        this.canvas.removeEventListener('touchend', this._handleTouchEnd);\n    }\n    isEmpty() {\n        return this._isEmpty;\n    }\n    fromData(pointGroups, { clear = true } = {}) {\n        if (clear) {\n            this.clear();\n        }\n        this._fromData(pointGroups, this._drawCurve.bind(this), this._drawDot.bind(this));\n        this._data = this._data.concat(pointGroups);\n    }\n    toData() {\n        return this._data;\n    }\n    _getPointGroupOptions(group) {\n        return {\n            penColor: group && 'penColor' in group ? group.penColor : this.penColor,\n            dotSize: group && 'dotSize' in group ? group.dotSize : this.dotSize,\n            minWidth: group && 'minWidth' in group ? group.minWidth : this.minWidth,\n            maxWidth: group && 'maxWidth' in group ? group.maxWidth : this.maxWidth,\n            velocityFilterWeight: group && 'velocityFilterWeight' in group\n                ? group.velocityFilterWeight\n                : this.velocityFilterWeight,\n        };\n    }\n    _strokeBegin(event) {\n        this.dispatchEvent(new CustomEvent('beginStroke', { detail: event }));\n        const pointGroupOptions = this._getPointGroupOptions();\n        const newPointGroup = Object.assign(Object.assign({}, pointGroupOptions), { points: [] });\n        this._data.push(newPointGroup);\n        this._reset(pointGroupOptions);\n        this._strokeUpdate(event);\n    }\n    _strokeUpdate(event) {\n        if (this._data.length === 0) {\n            this._strokeBegin(event);\n            return;\n        }\n        this.dispatchEvent(new CustomEvent('beforeUpdateStroke', { detail: event }));\n        const x = event.clientX;\n        const y = event.clientY;\n        const pressure = event.pressure !== undefined\n            ? event.pressure\n            : event.force !== undefined\n                ? event.force\n                : 0;\n        const point = this._createPoint(x, y, pressure);\n        const lastPointGroup = this._data[this._data.length - 1];\n        const lastPoints = lastPointGroup.points;\n        const lastPoint = lastPoints.length > 0 && lastPoints[lastPoints.length - 1];\n        const isLastPointTooClose = lastPoint\n            ? point.distanceTo(lastPoint) <= this.minDistance\n            : false;\n        const pointGroupOptions = this._getPointGroupOptions(lastPointGroup);\n        if (!lastPoint || !(lastPoint && isLastPointTooClose)) {\n            const curve = this._addPoint(point, pointGroupOptions);\n            if (!lastPoint) {\n                this._drawDot(point, pointGroupOptions);\n            }\n            else if (curve) {\n                this._drawCurve(curve, pointGroupOptions);\n            }\n            lastPoints.push({\n                time: point.time,\n                x: point.x,\n                y: point.y,\n                pressure: point.pressure,\n            });\n        }\n        this.dispatchEvent(new CustomEvent('afterUpdateStroke', { detail: event }));\n    }\n    _strokeEnd(event) {\n        this._strokeUpdate(event);\n        this.dispatchEvent(new CustomEvent('endStroke', { detail: event }));\n    }\n    _handlePointerEvents() {\n        this._drawningStroke = false;\n        this.canvas.addEventListener('pointerdown', this._handlePointerStart);\n        this.canvas.addEventListener('pointermove', this._handlePointerMove);\n        this.canvas.ownerDocument.addEventListener('pointerup', this._handlePointerEnd);\n    }\n    _handleMouseEvents() {\n        this._drawningStroke = false;\n        this.canvas.addEventListener('mousedown', this._handleMouseDown);\n        this.canvas.addEventListener('mousemove', this._handleMouseMove);\n        this.canvas.ownerDocument.addEventListener('mouseup', this._handleMouseUp);\n    }\n    _handleTouchEvents() {\n        this.canvas.addEventListener('touchstart', this._handleTouchStart);\n        this.canvas.addEventListener('touchmove', this._handleTouchMove);\n        this.canvas.addEventListener('touchend', this._handleTouchEnd);\n    }\n    _reset(options) {\n        this._lastPoints = [];\n        this._lastVelocity = 0;\n        this._lastWidth = (options.minWidth + options.maxWidth) / 2;\n        this._ctx.fillStyle = options.penColor;\n    }\n    _createPoint(x, y, pressure) {\n        const rect = this.canvas.getBoundingClientRect();\n        return new Point(x - rect.left, y - rect.top, pressure, new Date().getTime());\n    }\n    _addPoint(point, options) {\n        const { _lastPoints } = this;\n        _lastPoints.push(point);\n        if (_lastPoints.length > 2) {\n            if (_lastPoints.length === 3) {\n                _lastPoints.unshift(_lastPoints[0]);\n            }\n            const widths = this._calculateCurveWidths(_lastPoints[1], _lastPoints[2], options);\n            const curve = Bezier.fromPoints(_lastPoints, widths);\n            _lastPoints.shift();\n            return curve;\n        }\n        return null;\n    }\n    _calculateCurveWidths(startPoint, endPoint, options) {\n        const velocity = options.velocityFilterWeight * endPoint.velocityFrom(startPoint) +\n            (1 - options.velocityFilterWeight) * this._lastVelocity;\n        const newWidth = this._strokeWidth(velocity, options);\n        const widths = {\n            end: newWidth,\n            start: this._lastWidth,\n        };\n        this._lastVelocity = velocity;\n        this._lastWidth = newWidth;\n        return widths;\n    }\n    _strokeWidth(velocity, options) {\n        return Math.max(options.maxWidth / (velocity + 1), options.minWidth);\n    }\n    _drawCurveSegment(x, y, width) {\n        const ctx = this._ctx;\n        ctx.moveTo(x, y);\n        ctx.arc(x, y, width, 0, 2 * Math.PI, false);\n        this._isEmpty = false;\n    }\n    _drawCurve(curve, options) {\n        const ctx = this._ctx;\n        const widthDelta = curve.endWidth - curve.startWidth;\n        const drawSteps = Math.ceil(curve.length()) * 2;\n        ctx.beginPath();\n        ctx.fillStyle = options.penColor;\n        for (let i = 0; i < drawSteps; i += 1) {\n            const t = i / drawSteps;\n            const tt = t * t;\n            const ttt = tt * t;\n            const u = 1 - t;\n            const uu = u * u;\n            const uuu = uu * u;\n            let x = uuu * curve.startPoint.x;\n            x += 3 * uu * t * curve.control1.x;\n            x += 3 * u * tt * curve.control2.x;\n            x += ttt * curve.endPoint.x;\n            let y = uuu * curve.startPoint.y;\n            y += 3 * uu * t * curve.control1.y;\n            y += 3 * u * tt * curve.control2.y;\n            y += ttt * curve.endPoint.y;\n            const width = Math.min(curve.startWidth + ttt * widthDelta, options.maxWidth);\n            this._drawCurveSegment(x, y, width);\n        }\n        ctx.closePath();\n        ctx.fill();\n    }\n    _drawDot(point, options) {\n        const ctx = this._ctx;\n        const width = options.dotSize > 0\n            ? options.dotSize\n            : (options.minWidth + options.maxWidth) / 2;\n        ctx.beginPath();\n        this._drawCurveSegment(point.x, point.y, width);\n        ctx.closePath();\n        ctx.fillStyle = options.penColor;\n        ctx.fill();\n    }\n    _fromData(pointGroups, drawCurve, drawDot) {\n        for (const group of pointGroups) {\n            const { points } = group;\n            const pointGroupOptions = this._getPointGroupOptions(group);\n            if (points.length > 1) {\n                for (let j = 0; j < points.length; j += 1) {\n                    const basicPoint = points[j];\n                    const point = new Point(basicPoint.x, basicPoint.y, basicPoint.pressure, basicPoint.time);\n                    if (j === 0) {\n                        this._reset(pointGroupOptions);\n                    }\n                    const curve = this._addPoint(point, pointGroupOptions);\n                    if (curve) {\n                        drawCurve(curve, pointGroupOptions);\n                    }\n                }\n            }\n            else {\n                this._reset(pointGroupOptions);\n                drawDot(points[0], pointGroupOptions);\n            }\n        }\n    }\n    toSVG({ includeBackgroundColor = false } = {}) {\n        const pointGroups = this._data;\n        const ratio = Math.max(window.devicePixelRatio || 1, 1);\n        const minX = 0;\n        const minY = 0;\n        const maxX = this.canvas.width / ratio;\n        const maxY = this.canvas.height / ratio;\n        const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n        svg.setAttribute('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttribute('viewBox', `${minX} ${minY} ${maxX} ${maxY}`);\n        svg.setAttribute('width', maxX.toString());\n        svg.setAttribute('height', maxY.toString());\n        if (includeBackgroundColor && this.backgroundColor) {\n            const rect = document.createElement('rect');\n            rect.setAttribute('width', '100%');\n            rect.setAttribute('height', '100%');\n            rect.setAttribute('fill', this.backgroundColor);\n            svg.appendChild(rect);\n        }\n        this._fromData(pointGroups, (curve, { penColor }) => {\n            const path = document.createElement('path');\n            if (!isNaN(curve.control1.x) &&\n                !isNaN(curve.control1.y) &&\n                !isNaN(curve.control2.x) &&\n                !isNaN(curve.control2.y)) {\n                const attr = `M ${curve.startPoint.x.toFixed(3)},${curve.startPoint.y.toFixed(3)} ` +\n                    `C ${curve.control1.x.toFixed(3)},${curve.control1.y.toFixed(3)} ` +\n                    `${curve.control2.x.toFixed(3)},${curve.control2.y.toFixed(3)} ` +\n                    `${curve.endPoint.x.toFixed(3)},${curve.endPoint.y.toFixed(3)}`;\n                path.setAttribute('d', attr);\n                path.setAttribute('stroke-width', (curve.endWidth * 2.25).toFixed(3));\n                path.setAttribute('stroke', penColor);\n                path.setAttribute('fill', 'none');\n                path.setAttribute('stroke-linecap', 'round');\n                svg.appendChild(path);\n            }\n        }, (point, { penColor, dotSize, minWidth, maxWidth }) => {\n            const circle = document.createElement('circle');\n            const size = dotSize > 0 ? dotSize : (minWidth + maxWidth) / 2;\n            circle.setAttribute('r', size.toString());\n            circle.setAttribute('cx', point.x.toString());\n            circle.setAttribute('cy', point.y.toString());\n            circle.setAttribute('fill', penColor);\n            svg.appendChild(circle);\n        });\n        return svg.outerHTML;\n    }\n}\n\nexport { SignaturePad as default };\n//# sourceMappingURL=signature_pad.js.map\n","import SignaturePad from 'signature_pad'\nimport { cropCanvasAndExportToPNG } from './submission_form/crop_canvas'\n\nwindow.customElements.define('draw-signature', class extends HTMLElement {\n  connectedCallback () {\n    const scale = 3\n\n    this.canvas.width = this.canvas.parentNode.clientWidth * scale\n    this.canvas.height = this.canvas.parentNode.clientHeight * scale\n\n    this.canvas.getContext('2d').scale(scale, scale)\n\n    this.pad = new SignaturePad(this.canvas)\n\n    this.pad.addEventListener('endStroke', () => {\n      this.updateSubmitButtonVisibility()\n    })\n\n    this.clearButton.addEventListener('click', (e) => {\n      e.preventDefault()\n\n      this.clearSignaturePad()\n    })\n\n    this.form.addEventListener('submit', (e) => {\n      e.preventDefault()\n\n      this.submitButton.disabled = true\n\n      this.submitImage().then((data) => {\n        this.valueInput.value = data.uuid\n\n        return fetch(this.form.action, {\n          method: 'PUT',\n          body: new FormData(this.form)\n        }).then((response) => {\n          this.form.classList.add('hidden')\n          this.success.classList.remove('hidden')\n\n          return response\n        })\n      }).finally(() => {\n        this.submitButton.disabled = false\n      })\n    })\n  }\n\n  clearSignaturePad () {\n    this.pad.clear()\n    this.updateSubmitButtonVisibility()\n  }\n\n  updateSubmitButtonVisibility () {\n    if (this.pad.isEmpty()) {\n      this.submitButton.style.display = 'none'\n      this.placeholderButton.style.display = 'block'\n    } else {\n      this.submitButton.style.display = 'block'\n      this.placeholderButton.style.display = 'none'\n    }\n  }\n\n  async submitImage () {\n    return new Promise((resolve, reject) => {\n      cropCanvasAndExportToPNG(this.canvas, { errorOnTooSmall: true }).then(async (blob) => {\n        const file = new File([blob], 'signature.png', { type: 'image/png' })\n\n        const formData = new FormData()\n\n        formData.append('file', file)\n        formData.append('submitter_slug', this.dataset.slug)\n        formData.append('name', 'attachments')\n        formData.append('remember_signature', 'true')\n\n        return fetch('/api/attachments', {\n          method: 'POST',\n          body: formData\n        }).then((resp) => resp.json()).then((attachment) => {\n          return resolve(attachment)\n        })\n      }).catch((error) => {\n        return reject(error)\n      })\n    })\n  }\n\n  get submitButton () {\n    return this.querySelector('button[type=\"submit\"]')\n  }\n\n  get clearButton () {\n    return this.querySelector('button[aria-label=\"Clear\"]')\n  }\n\n  get placeholderButton () {\n    return this.querySelector('button[disabled]')\n  }\n\n  get canvas () {\n    return this.querySelector('canvas')\n  }\n\n  get valueInput () {\n    return this.querySelector('input[name^=\"values\"]')\n  }\n\n  get form () {\n    return this.querySelector('form')\n  }\n\n  get success () {\n    return this.querySelector('#success')\n  }\n})\n","function cropCanvasAndExportToPNG (canvas, { errorOnTooSmall } = { errorOnTooSmall: false }) {\n  const ctx = canvas.getContext('2d')\n\n  const width = canvas.width\n  const height = canvas.height\n\n  let topmost = height\n  let bottommost = 0\n  let leftmost = width\n  let rightmost = 0\n\n  const imageData = ctx.getImageData(0, 0, width, height)\n  const pixels = imageData.data\n\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      const pixelIndex = (y * width + x) * 4\n      const alpha = pixels[pixelIndex + 3]\n      if (alpha !== 0) {\n        topmost = Math.min(topmost, y)\n        bottommost = Math.max(bottommost, y)\n        leftmost = Math.min(leftmost, x)\n        rightmost = Math.max(rightmost, x)\n      }\n    }\n  }\n\n  const croppedWidth = rightmost - leftmost + 1\n  const croppedHeight = bottommost - topmost + 1\n\n  const croppedCanvas = document.createElement('canvas')\n  croppedCanvas.width = croppedWidth\n  croppedCanvas.height = croppedHeight\n  const croppedCtx = croppedCanvas.getContext('2d')\n\n  if (errorOnTooSmall && (croppedWidth < 20 || croppedHeight < 20)) {\n    return Promise.reject(new Error('Image too small'))\n  }\n\n  croppedCtx.drawImage(canvas, leftmost, topmost, croppedWidth, croppedHeight, 0, 0, croppedWidth, croppedHeight)\n\n  return new Promise((resolve, reject) => {\n    croppedCanvas.toBlob((blob) => {\n      if (blob) {\n        resolve(blob)\n      } else {\n        reject(new Error('Failed to create a PNG blob.'))\n      }\n    }, 'image/png')\n  })\n}\n\nexport { cropCanvasAndExportToPNG }\n"],"names":["Point","constructor","x","y","pressure","time","isNaN","Error","this","Date","now","distanceTo","start","Math","sqrt","pow","equals","other","velocityFrom","Bezier","startPoint","control2","control1","endPoint","startWidth","endWidth","static","points","widths","c2","calculateControlPoints","c3","c1","end","s1","s2","s3","dx1","dy1","dx2","dy2","m1","m2","l1","l2","k","cm","tx","ty","length","px","py","i","t","cx","point","cy","xdiff","ydiff","SignatureEventTarget","_et","EventTarget","error","document","addEventListener","type","listener","options","dispatchEvent","event","removeEventListener","callback","SignaturePad","canvas","super","_drawningStroke","_isEmpty","_lastPoints","_data","_lastVelocity","_lastWidth","_handleMouseDown","buttons","_strokeBegin","_handleMouseMove","_strokeMoveUpdate","_handleMouseUp","_strokeEnd","_handleTouchStart","cancelable","preventDefault","targetTouches","touch","changedTouches","_handleTouchMove","_handleTouchEnd","target","_handlePointerStart","_handlePointerMove","_handlePointerEnd","velocityFilterWeight","minWidth","maxWidth","throttle","minDistance","dotSize","penColor","backgroundColor","fn","wait","result","storedContext","storedArgs","previous","timeout","later","apply","args","remaining","clearTimeout","window","setTimeout","prototype","_strokeUpdate","_ctx","getContext","clear","on","ctx","fillStyle","clearRect","width","height","fillRect","_reset","_getPointGroupOptions","fromDataURL","dataUrl","Promise","resolve","reject","image","Image","ratio","devicePixelRatio","xOffset","yOffset","onload","drawImage","onerror","crossOrigin","src","toDataURL","encoderOptions","undefined","btoa","toSVG","style","touchAction","msTouchAction","userSelect","isIOS","test","navigator","userAgent","PointerEvent","_handlePointerEvents","_handleMouseEvents","_handleTouchEvents","off","ownerDocument","isEmpty","fromData","pointGroups","_fromData","_drawCurve","bind","_drawDot","concat","toData","group","CustomEvent","detail","pointGroupOptions","newPointGroup","Object","assign","push","clientX","clientY","force","_createPoint","lastPointGroup","lastPoints","lastPoint","isLastPointTooClose","curve","_addPoint","rect","getBoundingClientRect","left","top","getTime","unshift","_calculateCurveWidths","fromPoints","shift","velocity","newWidth","_strokeWidth","max","_drawCurveSegment","moveTo","arc","PI","widthDelta","drawSteps","ceil","beginPath","tt","ttt","u","uu","uuu","min","closePath","fill","drawCurve","drawDot","j","basicPoint","includeBackgroundColor","maxX","maxY","svg","createElementNS","setAttribute","toString","createElement","appendChild","path","attr","toFixed","circle","size","outerHTML","customElements","define","HTMLElement","connectedCallback","parentNode","clientWidth","clientHeight","scale","pad","updateSubmitButtonVisibility","clearButton","e","clearSignaturePad","form","submitButton","disabled","submitImage","then","data","valueInput","value","uuid","fetch","action","method","body","FormData","response","classList","add","success","remove","finally","display","placeholderButton","async","errorOnTooSmall","topmost","bottommost","leftmost","rightmost","pixels","getImageData","croppedWidth","croppedHeight","croppedCanvas","croppedCtx","toBlob","blob","cropCanvasAndExportToPNG","file","File","formData","append","dataset","slug","resp","json","attachment","catch","querySelector"],"sourceRoot":""}